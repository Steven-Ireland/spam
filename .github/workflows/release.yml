name: release

on:
  push:
    tags:
    - '*'
    
jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  release:
    # Name the Job
    name: Release
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.15.8'

      - name: Windows Build
        run: GOOS=windows GOARCH=amd64 go build -o bin/app-win64.exe main.go
      - name: Mac Build
        run: GOOS=darwin GOARCH=amd64 go build -o bin/app-mac64 main.go
      - name: Linux Build
        run: GOOS=linux GOARCH=amd64 go build -o bin/app-linux64 main.go

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        
      - name: Upload Release Asset
        id: upload-win64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./bin/app-win64.exe
          asset_name: spam-windows.exe
          asset_content_type: application/exe
      - name: Upload Release Asset
        id: upload-mac64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./bin/app-mac64
          asset_name: spam-macOS
          asset_content_type: application/octet-stream
      - name: Upload Release Asset
        id: upload-linux64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./bin/app-linux64
          asset_name: spam-linux
          asset_content_type: application/octet-stream
